// <auto-generated />
using System;
using KCIAO.API.MVC.Infraestructure.Data.AppData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace KCIAO.API.MVC.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KCIAO.API.MVC.Domain.Entities.ClienteDoenca", b =>
                {
                    b.Property<string>("fk_cliente")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("fk_doenca")
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("fk_cliente", "fk_doenca");

                    b.HasIndex("fk_doenca");

                    b.ToTable("tb_cliente_doenca");
                });

            modelBuilder.Entity("KCIAO.API.MVC.Domain.Entities.ClienteEntity", b =>
                {
                    b.Property<string>("id_cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("nm_cliente")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("id_cliente");

                    b.ToTable("tb_cliente");
                });

            modelBuilder.Entity("KCIAO.API.MVC.Domain.Entities.ConsultaEntity", b =>
                {
                    b.Property<string>("id_consulta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("fk_evento")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<int>("horario_consulta")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("local_consulta")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("profissional")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("id_consulta");

                    b.HasIndex("fk_evento")
                        .IsUnique();

                    b.ToTable("tb_consulta");
                });

            modelBuilder.Entity("KCIAO.API.MVC.Domain.Entities.DoencaEntity", b =>
                {
                    b.Property<string>("id_doenca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("nm_doenca")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("id_doenca");

                    b.ToTable("tb_doenca");
                });

            modelBuilder.Entity("KCIAO.API.MVC.Domain.Entities.EventoEntity", b =>
                {
                    b.Property<string>("id_evento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("desc_evento")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("dt_evento")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("fk_cliente")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("tipo_evento")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("id_evento");

                    b.HasIndex("fk_cliente");

                    b.ToTable("tb_evento");
                });

            modelBuilder.Entity("KCIAO.API.MVC.Domain.Entities.ClienteDoenca", b =>
                {
                    b.HasOne("KCIAO.API.MVC.Domain.Entities.ClienteEntity", "Cliente")
                        .WithMany("ClienteDoencas")
                        .HasForeignKey("fk_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KCIAO.API.MVC.Domain.Entities.DoencaEntity", "Doenca")
                        .WithMany("ClienteDoencas")
                        .HasForeignKey("fk_doenca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Doenca");
                });

            modelBuilder.Entity("KCIAO.API.MVC.Domain.Entities.ConsultaEntity", b =>
                {
                    b.HasOne("KCIAO.API.MVC.Domain.Entities.EventoEntity", "Evento")
                        .WithOne("Consulta")
                        .HasForeignKey("KCIAO.API.MVC.Domain.Entities.ConsultaEntity", "fk_evento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("KCIAO.API.MVC.Domain.Entities.EventoEntity", b =>
                {
                    b.HasOne("KCIAO.API.MVC.Domain.Entities.ClienteEntity", "Cliente")
                        .WithMany("Eventos")
                        .HasForeignKey("fk_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("KCIAO.API.MVC.Domain.Entities.ClienteEntity", b =>
                {
                    b.Navigation("ClienteDoencas");

                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("KCIAO.API.MVC.Domain.Entities.DoencaEntity", b =>
                {
                    b.Navigation("ClienteDoencas");
                });

            modelBuilder.Entity("KCIAO.API.MVC.Domain.Entities.EventoEntity", b =>
                {
                    b.Navigation("Consulta")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
